//https://www.geeksforgeeks.org/printing-pre-and-post-visited-times-in-dfs-of-a-graph/
#include <bits/stdc++.h>
using namespace std;
int Time = 1;
void dfs(int u,vector<vector<int>> aList,
					vector<int> &pre,
					vector<int> &post,
					vector<int> &vis)
{
	
	pre[u] = Time;
	Time++;
	vis[u] = 1;
	
	for(int v : aList[u])
	{
		if (vis[v] == 0)
			dfs(v, aList, pre, post, vis);
	}
	post[u] = Time;
	Time++;
}


int main()
{
	

	int n = 6;
	vector<vector<int>> aList(n + 1);
	
	vector<int> pre(n + 1);
	vector<int> post(n + 1);

	// Visited array
	vector<int> vis(n + 1);

	// Edges
	aList[1].push_back(2);
	aList[2].push_back(1);
	aList[2].push_back(4);
	aList[4].push_back(2);
	aList[1].push_back(3);
	aList[3].push_back(1);
	aList[3].push_back(4);
	aList[4].push_back(3);
	aList[3].push_back(5);
	aList[5].push_back(3);
	aList[5].push_back(6);
	aList[6].push_back(5);

	// DFS starting at Node 1
	dfs(1, aList, pre, post, vis);

	// Number of nodes in graph
	for(int i = 1; i <= n; i++)
		cout << "Node " << i << " Pre number "
			<< pre[i] << " Post number "
			<< post[i] << endl;

	return 0;
}

