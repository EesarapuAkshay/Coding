//https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/practice-problems/algorithm/monk-and-the-islands/
#include<bits/stdc++.h>
using namespace std;
vector<int> ar[10001];
int dis[10001],vis[10001];
void bfs(int s){
	
	queue<int> q;
	q.push(s);
	vis[s]=1;
	dis[s]=0;
	while(!q.empty()){
		int cur=q.front();
		q.pop();
	 for(int x:ar[cur])
       {
			if(vis[x]==0){
			vis[x]=1;
			dis[x]=dis[cur]+1;
			q.push(x);
		}
	   }
	}
}
int main(){
	int t,n,m,a,b;
	cin>>t;
	while(t--){
		
		cin>>n>>m;
	    for(int i=1;i<n;i++){
		  ar[i].clear();
		  vis[i]=0;
	    }
	     while(m--){

		    cin>>a>>b;
	    	ar[a].push_back(b);
	    	ar[b].push_back(a);
	    }
	    
	    bfs(1);
	    
	    cout<<dis[n]<<endl;
		
	}
	
}
