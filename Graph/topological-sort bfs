//https://practice.geeksforgeeks.org/problems/topological-sort/1#
class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	
	vector<int> topoSort(int V, vector<int> adj[]) 
	{    // code here
	    vector<int> indegree(V,0);
	    queue<int> q;
	    for(int i=0;i<V;i++){
	        for(auto x:adj[i]){
	            indegree[x]++;
	        }
	    }
	    
	    for(int i=0;i<V;i++){
	        if(indegree[i]==0){
	            q.push(i);
	        }
	    }
	    vector<int> res;
	    while(!q.empty()){
	        int v=q.front();
	        q.pop();
	        res.push_back(v);
	        for(auto g:adj[v]){
	            indegree[g]--;
	            if(indegree[g]==0){
	                q.push(g);
	            }
	        }
	    }
	        return res;
	}
};
