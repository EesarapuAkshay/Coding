//https://leetcode.com/problems/combination-sum/
class Solution {
public:
    void helper(int index,vector<int>& candidates, int target,vector<vector<int>> &res,vector<int> & ans){
        if(index==candidates.size()){
            if(target==0){
               res.push_back(ans);
            }
            return ;
        }
        
        if(candidates[index]<=target){
            ans.push_back(candidates[index]);
            helper(index,candidates,target-candidates[index],res,ans);
            ans.pop_back();
        }
        helper(index+1,candidates,target,res,ans);      
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> ans;
        vector<vector<int>> res;
        
        helper(0,candidates,target,res,ans);
        
        return res;
    }
};
