//https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1#
class Solution{
public:
    bool issubset(int arr[],int n,int target,vector<vector<int>> &dp){
        if(n==0) return 0;
        if(target==0) return 1;
        
        if(dp[n][target]!=-1) return dp[n][target];
        
        if(arr[n-1]<=target){
            return dp[n][target]=(issubset(arr,n-1,target-arr[n-1],dp))
            || (issubset(arr,n-1,target,dp));
        }
        else{
            return dp[n][target]=issubset(arr,n-1,target,dp);
        }
    }
    int equalPartition(int N, int arr[])
    {
        // code here
        int sum=0;
        //int n=(int)arr.length();
        for(int i=0;i<N;i++){
            sum=sum+arr[i];
        }
        if(sum%2!=0) return 0;
        int target=sum/2;
        vector<vector<int>> dp(N+1,vector<int> (target+1,-1));
        return issubset(arr,N,target,dp);
    }
};
