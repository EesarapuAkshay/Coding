//https://leetcode.com/problems/house-robber/
class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        int dp[n];
        if(n==0){
            return 0;
        }
        if(n==1){
            return nums[0];
        }
        if(n==2){
            return max(nums[1],nums[0]);
        }
        dp[0]=nums[0];
        dp[1]=max(nums[1],nums[0]);
        for(int i=2;i<n;i++){
            dp[i]=max(nums[i]+dp[i-2],dp[i-1]);
        }
        
        return dp[n-1];
        /*
        vector<int> even;
        vector<int> odd;
        int n=nums.size();
        for(int i=0;i<n;i++){
            if(i%2==0){
                even.push_back(nums[i]);
            }
            else{
                odd.push_back(nums[i]);
            }
        }
        
        int sum=0;
        int sum1=0;
        for(auto x:even){
            sum+=x;
        }
        for(auto x:odd){
            sum1+=x;
        }
        
        if(sum>sum1){
            return sum;
        }
        return sum1;
        */
        
    }
};
