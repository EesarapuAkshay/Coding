/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 //https://www.interviewbit.com/old/problems/cousins-in-binary-tree/
vector<int> Solution::solve(TreeNode* A, int B) {
    queue<TreeNode*> q;
    vector<int> ans;
    bool found=0;
    q.push(A);
    TreeNode*r=A;
    while(!q.empty()){
        int s=q.size();
        bool flevel=0;
        while(s--){
            r=q.front();
            q.pop();
            if(found){
                ans.push_back(r->val);
                continue;
            }
            if((r->left && r->left->val==B) || (r->right && r->right->val==B)){
                flevel=1;
            }
            else{
               if(r->left) q.push(r->left);
               if(r->right) q.push(r->right);
            }
            
        }
        found=flevel;
    }
    return ans;
}
